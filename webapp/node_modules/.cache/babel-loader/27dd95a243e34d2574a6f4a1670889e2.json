{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\src\\\\Components\\\\Layouts\\\\ComparePlayers\\\\ComparePlayers.js\";\nimport React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '../Card';\nimport PlayerStats from \"./PlayerStats\";\nimport TextField from '@material-ui/core/TextField';\nvar styles = {\n  card: {\n    padding: 20\n  }\n};\n\nvar ComparePlayers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComparePlayers, _React$Component);\n\n  function ComparePlayers(props) {\n    var _this;\n\n    _classCallCheck(this, ComparePlayers);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComparePlayers).call(this, props));\n\n    _this.getPlayers = function (_) {\n      fetch('http://localhost:4000/players').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          players: response.data\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.state = {\n      value: '',\n      players: [],\n      Player1: \"Muma\",\n      player2: \"sinatraa\",\n      hero: \"Tracer\"\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ComparePlayers, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPlayers();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        alignItems: \"center\",\n        spacing: 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"player1\",\n        label: \"Player 1\",\n        margin: \"normal\",\n        defaultValue: this.state.player1,\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), this.state.players.map(function (item, index) {\n        if (item.Name === document.getElementById(\"player1\").value) {\n          return React.createElement(Card, {\n            key: 1,\n            player: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, JSON.stringify(item));\n        }\n      })), React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"hero\",\n        label: \"Hero\",\n        margin: \"normal\",\n        defaultValue: this.state.hero,\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(PlayerStats, {\n        player1: \"Muma\",\n        player2: \"sinatraa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"player2\",\n        label: \"Player 2\",\n        margin: \"normal\",\n        defaultValue: this.state.player2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), this.state.players.map(function (item, index) {\n        if (item.Name === document.getElementById(\"player2\").value) {\n          return React.createElement(Card, {\n            key: 1,\n            player: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, JSON.stringify(item));\n        }\n      }))));\n    }\n  }]);\n\n  return ComparePlayers;\n}(React.Component);\n\nexport default withStyles(styles)(ComparePlayers);","map":{"version":3,"sources":["C:\\Users\\Evan\\Documents\\MST\\CS2300\\OverwatchStatManager\\webapp\\src\\Components\\Layouts\\ComparePlayers\\ComparePlayers.js"],"names":["React","Fragment","withStyles","Grid","Card","PlayerStats","TextField","styles","card","padding","ComparePlayers","props","getPlayers","_","fetch","then","response","json","setState","players","data","catch","err","console","error","state","value","Player1","player2","hero","handleChange","bind","event","target","player1","map","item","index","Name","document","getElementById","JSON","stringify","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAIA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADK,CAAf;;IAOMC,c;;;;;AACF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;;AADe,UAkBnBC,UAlBmB,GAkBN,UAAAC,CAAC,EAAI;AACdC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAC,QAAQ;AAAA,eAAI,MAAKE,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEH,QAAQ,CAACI;AAApB,SAAd,CAAJ;AAAA,OAFd,EAGCC,KAHD,CAGO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OAHV;AAID,KAvBgB;;AAEf,UAAKG,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETP,MAAAA,OAAO,EAAE,EAFA;AAGTQ,MAAAA,OAAO,EAAE,MAHA;AAITC,MAAAA,OAAO,EAAE,UAJA;AAKTC,MAAAA,IAAI,EAAE;AALG,KAAb;AAQA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAVe;AAWhB;;;;yCAGkB;AACjB,WAAKnB,UAAL;AACD;;;iCASYoB,K,EAAO;AAClB,WAAKd,QAAL,CAAc;AAACQ,QAAAA,KAAK,EAAEM,KAAK,CAACC,MAAN,CAAaP;AAArB,OAAd;AACD;;;6BAEM;AACL,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAC,QAAxB;AAAiC,QAAA,UAAU,EAAC,QAA5C;AAAqD,QAAA,OAAO,EAAE,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACI,QAAA,EAAE,EAAC,SADP;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,MAAM,EAAC,QAHX;AAII,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWS,OAJ7B;AAKI,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,KALtB;AAMI,QAAA,QAAQ,EAAE,KAAKI,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EASC,KAAKL,KAAL,CAAWN,OAAX,CAAmBgB,GAAnB,CAAuB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACrC,YAAGD,IAAI,CAACE,IAAL,KAAcC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCd,KAApD,EAA2D;AACvD,iBAAO,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAE,CAAX;AAAc,YAAA,MAAM,EAAEU,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6BK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA7B,CAAP;AACH;AACJ,OAJA,CATD,CADJ,EAiBI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,EAAE,EAAC,MADP;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,MAAM,EAAC,QAHX;AAII,QAAA,YAAY,EAAE,KAAKX,KAAL,CAAWI,IAJ7B;AAKI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KALtB;AAMI,QAAA,QAAQ,EAAE,KAAKI,YANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAC,MAArB;AAA4B,QAAA,OAAO,EAAC,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CAjBJ,EA6BI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,OAAO,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AACI,QAAA,EAAE,EAAC,SADP;AAEI,QAAA,KAAK,EAAC,UAFV;AAGI,QAAA,MAAM,EAAC,QAHX;AAII,QAAA,YAAY,EAAE,KAAKL,KAAL,CAAWG,OAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAOC,KAAKH,KAAL,CAAWN,OAAX,CAAmBgB,GAAnB,CAAuB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACrC,YAAGD,IAAI,CAACE,IAAL,KAAcC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCd,KAApD,EAA2D;AACvD,iBAAO,oBAAC,IAAD;AAAM,YAAA,GAAG,EAAE,CAAX;AAAc,YAAA,MAAM,EAAEU,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA6BK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA7B,CAAP;AACH;AACJ,OAJA,CAPD,CA7BJ,CADJ,CADJ;AA+CH;;;;EA9EwBpC,KAAK,CAAC2C,S;;AAiFnC,eAAezC,UAAU,CAACK,MAAD,CAAV,CAAmBG,cAAnB,CAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '../Card'\r\nimport PlayerStats from \"./PlayerStats\"\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n      padding: 20,\r\n    }\r\n  };\r\n\r\n\r\nclass ComparePlayers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            players: [],\r\n            Player1: \"Muma\",\r\n            player2: \"sinatraa\",\r\n            hero: \"Tracer\",\r\n        };\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n      }\r\n\r\n\r\n    componentWillMount() {\r\n        this.getPlayers()\r\n      }\r\n    \r\n    getPlayers = _ => {\r\n        fetch('http://localhost:4000/players')\r\n        .then(response => response.json())\r\n        .then(response => this.setState({ players: response.data}))\r\n        .catch(err => console.error(err))\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({value: event.target.value});\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Grid container justify=\"center\" alignItems=\"center\" spacing={16}>\r\n                    <Grid item>\r\n                    <TextField\r\n                        id=\"player1\"\r\n                        label=\"Player 1\"\r\n                        margin=\"normal\"\r\n                        defaultValue={this.state.player1}\r\n                        value={this.state.value} \r\n                        onChange={this.handleChange}\r\n                    />\r\n                    {this.state.players.map((item, index) => {\r\n                        if(item.Name === document.getElementById(\"player1\").value) {\r\n                            return <Card key={1} player={item}>{JSON.stringify(item)}</Card>\r\n                        }\r\n                    })}\r\n                    </Grid>\r\n            \r\n                    <Grid item>\r\n                        <TextField \r\n                            id=\"hero\"\r\n                            label=\"Hero\"\r\n                            margin=\"normal\"\r\n                            defaultValue={this.state.hero}\r\n                            value={this.state.value} \r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <PlayerStats player1=\"Muma\" player2=\"sinatraa\"/>\r\n                    </Grid>\r\n\r\n                    <Grid item justify=\"center\">\r\n                    <TextField\r\n                        id=\"player2\"\r\n                        label=\"Player 2\"\r\n                        margin=\"normal\"\r\n                        defaultValue={this.state.player2}\r\n                    />\r\n                    {this.state.players.map((item, index) => {\r\n                        if(item.Name === document.getElementById(\"player2\").value) {\r\n                            return <Card key={1} player={item}>{JSON.stringify(item)}</Card>\r\n                        }\r\n                    })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ComparePlayers);"]},"metadata":{},"sourceType":"module"}