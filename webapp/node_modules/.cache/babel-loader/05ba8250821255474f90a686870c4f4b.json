{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Evan\\\\Documents\\\\MST\\\\CS2300\\\\OverwatchStatManager\\\\webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '../Card';\nimport PlayerStats from \"./PlayerStats\";\nimport TextField from '@material-ui/core/TextField';\nvar styles = {\n  card: {\n    padding: 20\n  }\n};\n\nvar ComparePlayers =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ComparePlayers, _React$Component);\n\n  function ComparePlayers() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ComparePlayers);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ComparePlayers)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      players: [],\n      Player1: \"Muma\",\n      player2: \"sinatraa\",\n      hero: \"Tracer\"\n    };\n\n    _this.getPlayers = function (_) {\n      fetch('http://localhost:4000/players').then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        return _this.setState({\n          players: response.data\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ComparePlayers, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPlayers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return {\n        /*<Fragment>\r\n           <Grid container justify=\"center\" alignItems=\"center\" spacing={16}>\r\n               <Grid item>\r\n               <TextField\r\n                   id=\"player1\"\r\n                   label=\"Player\"\r\n                   margin=\"normal\"\r\n                   defaultValue={this.state.player}\r\n               />\r\n               {this.state.players.map((item, index) => {\r\n                   if(item.Name === document.getElementById(\"player1\").value) {\r\n                       return <Card key={1} player={item}>{JSON.stringify(item)}</Card>\r\n                   }\r\n               })}\r\n               </Grid>\r\n        \n               <Grid item>\r\n                   <TextField \r\n                       id=\"hero\"\r\n                       label=\"Hero\"\r\n                       margin=\"normal\"\r\n                       defaultValue={this.state.hero}\r\n                   />\r\n                   <PlayerStats player1=\"Muma\" player2=\"sinatraa\"/>\r\n               </Grid>\r\n                 <Grid item justify=\"center\">\r\n               <TextField\r\n                   id=\"player2\"\r\n                   label=\"Player\"\r\n                   margin=\"normal\"\r\n                   defaultValue={this.state.player}\r\n               />\r\n               {this.state.players.map((item, index) => {\r\n                   if(item.Name === document.getElementById(\"player2\").value) {\r\n                       return <Card key={1} player={item}>{JSON.stringify(item)}</Card>\r\n                   }\r\n               })}\r\n               </Grid>\r\n           </Grid>\r\n        </Fragment>*/\n      };\n    }\n  }]);\n\n  return ComparePlayers;\n}(React.Component);\n\nexport default withStyles(styles)(ComparePlayers);","map":{"version":3,"sources":["C:\\Users\\Evan\\Documents\\MST\\CS2300\\OverwatchStatManager\\webapp\\src\\Components\\Layouts\\ComparePlayers\\ComparePlayers.js"],"names":["React","Fragment","withStyles","Grid","Card","PlayerStats","TextField","styles","card","padding","ComparePlayers","state","players","Player1","player2","hero","getPlayers","_","fetch","then","response","json","setState","data","catch","err","console","error","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAIA,IAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL;AADK,CAAf;;IAOMC,c;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,OAAO,EAAE,MAFL;AAGJC,MAAAA,OAAO,EAAE,UAHL;AAIJC,MAAAA,IAAI,EAAE;AAJF,K;;UAWRC,U,GAAa,UAAAC,CAAC,EAAI;AACdC,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAC,QAAQ;AAAA,eAAI,MAAKE,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAEQ,QAAQ,CAACG;AAApB,SAAd,CAAJ;AAAA,OAFd,EAGCC,KAHD,CAGO,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,OAHV;AAID,K;;;;;;;yCATkB;AACjB,WAAKT,UAAL;AACD;;;6BASM;AACL,aACI;AAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAD,OADJ;AA2CH;;;;EA/DwBhB,KAAK,CAAC4B,S;;AAkEnC,eAAe1B,UAAU,CAACK,MAAD,CAAV,CAAmBG,cAAnB,CAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '../Card'\r\nimport PlayerStats from \"./PlayerStats\"\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n      padding: 20,\r\n    }\r\n  };\r\n\r\n\r\nclass ComparePlayers extends React.Component {\r\n    state = {\r\n        players: [],\r\n        Player1: \"Muma\",\r\n        player2: \"sinatraa\",\r\n        hero: \"Tracer\",\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getPlayers()\r\n      }\r\n    \r\n    getPlayers = _ => {\r\n        fetch('http://localhost:4000/players')\r\n        .then(response => response.json())\r\n        .then(response => this.setState({ players: response.data}))\r\n        .catch(err => console.error(err))\r\n      }\r\n    \r\n    render() {\r\n        return (\r\n            {/*<Fragment>\r\n                <Grid container justify=\"center\" alignItems=\"center\" spacing={16}>\r\n                    <Grid item>\r\n                    <TextField\r\n                        id=\"player1\"\r\n                        label=\"Player\"\r\n                        margin=\"normal\"\r\n                        defaultValue={this.state.player}\r\n                    />\r\n                    {this.state.players.map((item, index) => {\r\n                        if(item.Name === document.getElementById(\"player1\").value) {\r\n                            return <Card key={1} player={item}>{JSON.stringify(item)}</Card>\r\n                        }\r\n                    })}\r\n                    </Grid>\r\n            \r\n                    <Grid item>\r\n                        <TextField \r\n                            id=\"hero\"\r\n                            label=\"Hero\"\r\n                            margin=\"normal\"\r\n                            defaultValue={this.state.hero}\r\n                        />\r\n                        <PlayerStats player1=\"Muma\" player2=\"sinatraa\"/>\r\n                    </Grid>\r\n\r\n                    <Grid item justify=\"center\">\r\n                    <TextField\r\n                        id=\"player2\"\r\n                        label=\"Player\"\r\n                        margin=\"normal\"\r\n                        defaultValue={this.state.player}\r\n                    />\r\n                    {this.state.players.map((item, index) => {\r\n                        if(item.Name === document.getElementById(\"player2\").value) {\r\n                            return <Card key={1} player={item}>{JSON.stringify(item)}</Card>\r\n                        }\r\n                    })}\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>*/}\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ComparePlayers);"]},"metadata":{},"sourceType":"module"}